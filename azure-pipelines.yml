trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  registryName: "helmjava"

steps:
  - template: templates/build.yaml
    parameters:
      buildConfiguration: "install"

  - task: Docker@2
    inputs:
      containerRegistry: "My ACR Connection"
      repository: $(registryName)
      command: "buildAndPush"
      Dockerfile: "**/Dockerfile"
      addPipelineData: false
      addBaseImageData: false
      tags: |
         $(Build.BuildNumber)
    displayName: "Bulding and Publishing Docker Image to ACR"

  - task: CopyFiles@2
    inputs:
      SourceFolder: "helm"
      Contents: "**"
      TargetFolder: "$(Build.ArtifactStagingDirectory)"
      CleanTargetFolder: true
      OverWrite: true
    displayName: "Copying Contents"

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: "$(Build.ArtifactStagingDirectory)"
      artifactName: "myartificats"
    displayName: "Publishing Artificats"


#Release pipeline for above

# # steps:
# # - task: HelmDeploy@0
#   displayName: 'helm upgrade'
#   inputs:
#     connectionType: 'Kubernetes Service Connection'
#     kubernetesServiceConnection: 'my k8 Connection'
#     command: upgrade
#     chartType: FilePath
#     chartPath: '$(System.DefaultWorkingDirectory)/_raghavag1997.aks-helm-pipeline-demo/myartificats/aks-java'
#     releaseName: myjavachart
#     overrideValues: 'image.tag=$(Build.BuildNumber)'
#     valueFile: '$(System.DefaultWorkingDirectory)/_raghavag1997.aks-helm-pipeline-demo/myartificats/aks-java/values.yaml'